# Generated by Django 4.2.5 on 2024-05-11 07:31

import autoslug.fields
import core.utils
import dirtyfields.dirtyfields
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import phonenumber_field.modelfields
import uuid
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('country', models.CharField(db_index=True, max_length=50)),
                ('language', models.CharField(default='en', max_length=2)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from=core.utils.get_user_slug, unique=True)),
                ('avatar', versatileimagefield.fields.VersatileImageField(blank=True, upload_to=core.utils.get_user_media_path_prefix, verbose_name='Image')),
                ('alt', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PLACEHOLDER', 'Placeholder'), ('ACTIVE', 'Active'), ('HIDDEN', 'Hidden'), ('PAUSED', 'Paused'), ('REMOVED', 'Removed')], db_index=True, default='DRAFT', max_length=20)),
                ('gender', models.CharField(blank=True, choices=[('FEMALE', 'Female'), ('MALE', 'Male'), ('OTHER', 'Other')], db_index=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('role', models.CharField(choices=[('INITIATOR', 'Initiator'), ('STAFF', 'Staff'), ('ADMIN', 'Admin'), ('OWNER', 'Owner')], default='INITIATOR', max_length=30)),
                ('image', models.CharField(blank=True, max_length=255)),
                ('exp', models.CharField(blank=True, max_length=255)),
                ('sub', models.CharField(blank=True, max_length=255)),
                ('iat', models.CharField(blank=True, max_length=255)),
                ('jti', models.CharField(blank=True, max_length=255)),
                ('picture', models.CharField(blank=True, max_length=255)),
                ('website_url', models.URLField(blank=True)),
                ('blog_url', models.URLField(blank=True)),
                ('facebook_url', models.URLField(blank=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('linkedin_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ('-date_joined',),
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
    ]
